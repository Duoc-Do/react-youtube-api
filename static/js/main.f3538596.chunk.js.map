{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","placeholder","React","Component","axios","create","baseURL","VideoItem","video","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","alt","title","VideoList","videos","renderedList","map","key","id","VideoDetail","videoSrc","videoId","description","KEY","App","selectedVideo","onTermSubmit","a","youtube","get","params","q","part","maxResults","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"sQA6BeA,E,4MA3BbC,MAAQ,CAAEC,KAAM,I,EAChBC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAErCC,aAAe,SAACJ,GAEdA,EAAMK,iBACN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,uDAGnC,OACE,yBAAKS,UAAU,yBACb,0BAAMC,SAAUC,KAAKL,aAAcG,UAAU,WAC3C,yBAAKA,UAAU,SACb,iDACA,2BACEG,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,cACfa,YAAY,4B,GApBFC,IAAMC,W,QCCfC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,0CCoBIC,G,MApBG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1B,OACE,yBACEb,UAAU,OACVc,QAAS,WACPD,EAAcD,KAGhB,yBACEG,IAAKH,EAAMI,QAAQC,WAAWC,OAAOC,IACrCC,IAAKR,EAAMI,QAAQK,MACnBrB,UAAU,aAEZ,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UAAf,IAA0BY,EAAMI,QAAQK,WCPjCC,EARG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACrBW,EAAeD,EAAOE,KAAI,SAACb,GAC/B,OACE,kBAAC,EAAD,CAAWA,MAAOA,EAAOc,IAAKd,EAAMe,GAAId,cAAeA,OAG3D,OAAO,yBAAKb,UAAU,2BAA2BwB,EAA1C,MCUMI,EAjBK,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MACrB,IAAKA,EACH,OAAO,4CAET,IAAMiB,EAAQ,wCAAoCjB,EAAMe,GAAGG,SAC3D,OACE,6BACE,yBAAK9B,UAAU,YACb,4BAAQe,IAAKc,KAEf,yBAAK7B,UAAU,cACb,wBAAIA,UAAU,aAAd,IAA4BY,EAAMI,QAAQK,OAC1C,2BAAIT,EAAMI,QAAQe,gBCRpBC,EAAM,0CAkCGC,E,4MAhCb3C,MAAQ,CAAEiC,OAAQ,GAAIW,cAAe,M,EACrCC,a,uCAAe,WAAO5C,GAAP,eAAA6C,EAAA,sEACUC,EAAQC,IAAI,UAAW,CAC5CC,OAAQ,CACNC,EAAGjD,EACHkD,KAAM,UACNtC,KAAM,QACNuC,WAAY,EACZhB,IAAKM,KAPI,OACPW,EADO,OAUb,EAAKjD,SAAS,CAAE6B,OAAQoB,EAASC,KAAKC,QAVzB,2C,wDAafhC,cAAgB,SAACD,GACf,EAAKlB,SAAS,CAAEwC,cAAetB,K,uDAI/B,OACE,yBAAKZ,UAAU,gBACb,kBAAC,EAAD,CAAWH,aAAcK,KAAKiC,eAC9B,kBAAC,EAAD,CAAavB,MAAOV,KAAKZ,MAAM4C,gBAC/B,kBAAC,EAAD,CACErB,cAAeX,KAAKW,cACpBU,OAAQrB,KAAKZ,MAAMiC,c,GA1BXhB,aCHlBuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.f3538596.chunk.js","sourcesContent":["import React from \"react\";\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n  onInputChange = (event) => {\n    this.setState({ term: event.target.value });\n  };\n  onFormSubmit = (event) => {\n    // this is a prop funtcion use for App and SearchBar Component together\n    event.preventDefault();\n    this.props.onFormSubmit(this.state.term);\n  };\n  render() {\n    return (\n      <div className=\"search-bar ui segment\">\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Video Search: </label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={this.onInputChange}\n              placeholder=\"Search Videos...\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default SearchBar;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\n});\n","import \"./VideoItem.css\";\nimport React from \"react\";\n\nconst VideoItem = ({ video, onVideoSelect }) => {\n  return (\n    <div\n      className=\"item\"\n      onClick={() => {\n        onVideoSelect(video);\n      }}\n    >\n      <img\n        src={video.snippet.thumbnails.medium.url}\n        alt={video.snippet.title}\n        className=\"ui image\"\n      />\n      <div className=\"content\">\n        <div className=\"header\"> {video.snippet.title}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoItem;\n","import React from \"react\";\nimport VideoItem from \"./VideoItem\";\nconst VideoList = ({ videos, onVideoSelect }) => {\n  const renderedList = videos.map((video) => {\n    return (\n      <VideoItem video={video} key={video.id} onVideoSelect={onVideoSelect} />\n    );\n  });\n  return <div className=\"ui relaxed divided list\">{renderedList} </div>;\n};\nexport default VideoList;\n","import React from \"react\";\nconst VideoDetail = ({ video }) => {\n  if (!video) {\n    return <div>Loading....</div>;\n  }\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n  return (\n    <div>\n      <div className=\"ui embed\">\n        <iframe src={videoSrc} />\n      </div>\n      <div className=\"ui segment\">\n        <h4 className=\"ui header\"> {video.snippet.title}</h4>\n        <p>{video.snippet.description}</p>\n      </div>\n    </div>\n  );\n};\nexport default VideoDetail;\n","import React, { Component } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport youtube from \"../apis/youtube\";\nimport VideoList from \"./VideoList\";\nimport VideoDetail from \"./VideoDetail\";\nconst KEY = \"AIzaSyA5zAKQbFaBXKFtvoY9GtjMR_jRaECzKaY\";\nclass App extends Component {\n  state = { videos: [], selectedVideo: null };\n  onTermSubmit = async (term) => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: term, // term is String we need to search for\n        part: \"snippet\",\n        type: \"video\",\n        maxResults: 5,\n        key: KEY,\n      },\n    });\n    this.setState({ videos: response.data.items });\n  };\n\n  onVideoSelect = (video) => {\n    this.setState({ selectedVideo: video });\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <SearchBar onFormSubmit={this.onTermSubmit} />\n        <VideoDetail video={this.state.selectedVideo} />\n        <VideoList\n          onVideoSelect={this.onVideoSelect}\n          videos={this.state.videos}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}